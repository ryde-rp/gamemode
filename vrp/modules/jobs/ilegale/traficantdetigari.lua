local inDelivery = {}
local deliveryPoints = {
	vec3(331.4627380371,465.26473999024,151.25340270996),
	vec3(315.76620483398,502.1064453125,153.17974853516),
	vec3(325.0562133789,537.18225097656,153.86599731446),
	vec3(232.2760925293,672.19506835938,189.97657775878),
	vec3(216.46301269532,620.39251708984,187.75695800782),
	vec3(84.925521850586,561.65515136718,182.77305603028),
	vec3(-66.82780456543,490.04333496094,144.88473510742),
	vec3(-7.9512867927552,467.77264404296,145.84103393554),
	vec3(57.55626296997,449.8244934082,147.03121948242),
	vec3(43.058837890625,468.86672973632,148.09588623046),
	vec3(79.905632019042,486.26336669922,148.20167541504),
	vec3(119.8353881836,494.41122436524,147.34294128418),
	vec(224.09326171875,513.69934082032,140.76698303222),
	vec3(-230.24746704102,487.93041992188,128.76806640625),
	vec3(-311.73583984375,474.95593261718,111.82556152344),
	vec3(-297.81378173828,379.99459838868,112.0955657959),
	vec3(-371.87493896484,343.23287963868,109.94309997558),
	vec3(-409.64465332032,341.47329711914,108.90742492676),
	vec3(-516.50994873046,433.3796081543,97.808029174804),
	vec3(-450.90625,395.37042236328,104.77861785888),
	vec3(-348.76599121094,514.98126220704,120.64807128906),
	vec3(-386.84558105468,504.14352416992,120.41275787354),
	vec3(-406.26586914062,567.56127929688,124.6042098999),
	vec3(-595.79010009766,393.03326416016,101.88246154786),
	vec3(-615.5464477539,398.25259399414,101.62671661376),
	vec3(-554.44146728516,541.0439453125,110.70722198486),
	vec3(-526.6304321289,516.93524169922,112.9428024292),
	vec3(-520.7290649414,594.19128417968,120.83666992188),
	vec3(-474.3392944336,585.91284179688,128.68392944336),
	vec3(-533.44189453125,709.61651611328,153.15229797364),
	vec3(-495.7575378418,738.62677001954,163.03092956542),
	vec3(-596.88165283204,851.45739746094,211.47869873046),
	vec3(-622.86315917968,488.80682373046,108.87707519532),
	vec3(-640.9888305664,520.52966308594,109.88286590576),
	vec3(-762.15362548828,430.75305175782,100.19681549072),
	vec3(-564.52282714844,684.72888183594,146.63330078125),
	vec3(-606.19982910156,672.24188232422,151.59880065918),
	vec3(-747.390625,808.25378417968,215.15098571778),
	vec3(-823.99108886718,805.88330078125,202.7844696045),
	vec3(-867.2211303711,784.7578125,191.93423461914),
	vec3(-912.29907226562,777.16046142578,187.01136779786),
	vec3(-921.2192993164,814.10180664062,184.33619689942),
	vec3(-962.77056884766,814.26629638672,177.75942993164),
	vec3(-999.61181640625,816.9741821289,173.04983520508),
	vec3(-1100.616821289,797.98724365234,167.25631713868),
	vec3(-1130.8052978516,784.54107666016,163.88772583008),
	vec3(-1117.7768554688,761.36785888672,164.28866577148),
	vec(-1165.6743164062,726.79333496094,155.6067352295),
	vec3(-1248.8283691406,643.01861572266,142.71876525878),
	vec3(-1291.7821044922,650.44177246094,141.5013885498),
	vec3(-1367.3627929688,610.73205566406,133.88088989258),
	vec3(-1337.0341796875,606.19024658204,134.37997436524),
	vec3(-1308.1198730468,448.9931640625,100.96977996826),
	vec3(-1215.8250732422,457.81707763672,92.06379699707),
	vec3(-1158.8468017578,481.91015625,86.093803405762),
	vec3(-1094.9080810546,427.27911376954,75.879692077636),
	vec3(-968.87274169922,436.83737182618,80.766212463378),
	vec3(-967.12194824218,510.61083984375,82.06640625),
	vec3(-987.30139160156,487.11877441406,82.461212158204),
	vec3(-842.68017578125,466.89733886718,87.596061706542),
	vec3(-866.62829589844,457.62326049804,88.281074523926),
	vec3(-848.67126464844,508.6092224121,90.817070007324),
	vec3(-884.54321289062,517.92260742188,92.442840576172),
	vec3(-907.67749023438,544.96380615234,100.39915466308),
	vec3(-924.82006835938,561.34454345704,100.15783691406),
	vec3(-904.53314208984,588.10290527344,101.19060516358),
	vec3(-947.9234008789,567.79016113282,101.50690460206),
	vec3(-974.38958740234,581.81945800782,103.14887237548),
	vec3(-1022.6534423828,586.93701171875,103.42865753174),
	vec3(-1107.7397460938,594.49224853516,104.45462799072),
	vec3(-1125.3319091796,548.30517578125,102.57237243652),
	vec3(-1146.4962158204,545.88397216796,101.90760040284),
	vec3(-1193.0458984375,564.02923583984,100.3394241333),
	vec3(-1056.4079589844,761.55242919922,167.31578063964),
	vec3(-931.57647705078,690.97760009766,153.4666595459),
	vec3(-908.67443847656,693.75415039062,151.43588256836),
	vec3(-884.51867675782,699.39233398438,151.27098083496),
	vec3(-765.70874023438,650.5767211914,145.69911193848),
	vec3(-704.13488769532,588.39221191406,142.2798461914),
	vec3(-579.7367553711,732.73547363282,184.22007751464),
	vec3(-565.68518066406,761.1802368164,185.42481994628),
	vec3(-595.98913574218,780.49639892578,189.30946350098),
	vec3(-599.90991210938,807.53314208984,191.52464294434),
	vec3(-655.21075439454,802.8759765625,198.990234375),
}

local possibleItems = {
	{"fp_kent_turcesc", "Pachet Kent Turcesc", 250000},
	{"fp_camel_turcesc", "Pachet Camel Turcesc", 250000},
}

local function cig_choices() end
for _, tx in pairs(possibleItems) do
	vRP.defInventoryItem(tx[1], tx[2], "Pachet de tigari obtinut prin contrabanda.", cig_choices, tx[4] or 0.5)
end

function tvRP.setCigarettesTask()
	local user_id = vRP.getUserId(source)
	math.randomseed(os.time() * user_id)

	if vRP.getUserJob(user_id) ~= "Traficant de Tigari" then
		return vRP.banPlayer(0, user_id, -1, "Injection detected [vrp][cigarettesTask]")
	end

	local items = {}

	for i=1, 2 do
		local item = possibleItems[i]
		
		if item then
			table.insert(items, {
				name = item[2],
				item = item[1],
				onePrice = item[3] or 0,
				amount = math.random(1,2),
			})
		end
	end

	inDelivery[user_id] = items

	return {
		pos = table.rnd(deliveryPoints),
		items = items,
	}
end

function tvRP.finishCigarettesTask()
	local player = source
	local user_id = vRP.getUserId(player)
	local function ban()
		return vRP.banPlayer(0, user_id, -1, "Injection detected [vrp][cigarettesTask]")
	end

	if vRP.getUserJob(user_id) ~= "Traficant de Tigari" then
		return ban()
	end

	local taskItems = inDelivery[user_id]
	if not taskItems then
		return ban()
	end

	local reward = 0
	for key, data in pairs(taskItems) do
		if vRP.tryGetInventoryItem(user_id, data.item, data.amount, true) then
			reward = reward + (data.amount * data.onePrice)
		end
	end

	if reward > 0 then
		-- vRPclient.notify(player, {"ðŸ’¶ Ai castigat $"..reward, "info"})
		-- vRP.giveMoney(user_id, reward)
		vRPclient.giveInventoryItem(user_id, "bani_murdari", reward, true)
	end
	
	inDelivery[user_id] = nil
end

AddEventHandler("vRP:playerLeave", function(user_id)
	inDelivery[user_id] = nil
end)

local itemsTable = {
	["fp_tutun_procesat"] = 3,
	["fp_filtre"] = 1,
	["fp_foite"] = 1,
}

RegisterServerEvent("fp-traficantDeTigari:cumparaItem")
AddEventHandler("fp-traficantDeTigari:cumparaItem", function(item)
	local player = source
	local user_id = vRP.getUserId(source)
	local price = itemsTable[item]

	if price then
		vRP.prompt(player, "BUY ITEMS", {
			{field = "amt", title = "Cantitate", number = true, text = 1}
		}, function(player, res)
			local amt = res["amt"] or 0

			if amt > 0 then
				price = amt * price
				
				if vRP.canCarryItem(user_id, item, amt, true) then
					if vRP.tryPayment(user_id, price, true) then
						vRP.giveInventoryItem(user_id, item, amt, true)
					end
				end
			end
		end)
	end
end)